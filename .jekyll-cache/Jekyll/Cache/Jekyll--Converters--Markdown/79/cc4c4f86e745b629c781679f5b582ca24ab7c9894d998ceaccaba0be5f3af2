I"±<p>At some point last summer, I decided <a href="http://julialang.org/">Julia</a> was going to win.</p>

<p>I had been coding up a time series algorithm that involved a number of loops, and despite all my best NumPy magic, I couldnâ€™t avoid them. Numba didnâ€™t help. I coded the same algorithm in Julia with very little trouble (and more than a few suboptimal patterns, in retrospect), and I got a tenfold speedup. Like that.</p>

<p>So yes, itâ€™s rough around the edges. Yes, there are breaking changes ahead. But <a href="https://www.youtube.com/watch?v=5gXMpbY1kJY">1.0 is coming</a>, and despite the fact that Python remains our go-to solution for data analysis in P[Î»]ab, we are increasingly using Julia for our <a href="https://github.com/jmxpearson/VinDsl.jl">machine learning efforts</a>. In fact, last month, John spoke at the third annual JuliaCon, and weâ€™ve been doing our part to contribute to the ecosystem surrounding it. Weâ€™re excited for whatâ€™s coming and hope to see lots of new labs, particularly in computational neuroscience come on board.</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/ZfjRjljXYXk" frameborder="0" allowfullscreen=""></iframe>
:ET